gl <GL/gl3w.h>
ns asserts
out dep/asserts

debug

begin GBufferShader
	src shaders/gbuffer.frag GL_FRAGMENT_SHADER
	src shaders/gbuffer.vert GL_VERTEX_SHADER
	u bool uHaveNormalTexture
	u mat4 uProjection
	u mat4 uView
end

begin HalfShader
	src shaders/quad.vert GL_VERTEX_SHADER
	src shaders/half.frag GL_FRAGMENT_SHADER
end

begin ShadowShader
	src shaders/shadow.frag GL_FRAGMENT_SHADER
	src shaders/shadow.vert GL_VERTEX_SHADER
	u mat4 uLightMatrix
end

begin VoxelizeShader
	src shaders/voxelize.frag GL_FRAGMENT_SHADER
	src shaders/voxelize.vert GL_VERTEX_SHADER
	src shaders/voxelize.geom GL_GEOMETRY_SHADER
	u vec3 uVoxelGridRangeMin
	u vec3 uVoxelGridRangeMax
	u float uVoxelWorldSize
	u vec3 uLightDir
	u mat4 uLightMatrix
end

begin TraceShader
	src shaders/trace.frag GL_FRAGMENT_SHADER
	src shaders/trace.vert GL_VERTEX_SHADER
	u mat4 uView
	u mat4 uProjection
	u ivec3 uVoxelDimension
	u vec3 uVoxelGridRangeMin
	u vec3 uVoxelGridRangeMax
	u float uVoxelWorldSize
	u vec3 uCamPosition
end

begin FinalShader
	src shaders/final_pass.frag GL_FRAGMENT_SHADER
	src shaders/trace.vert GL_VERTEX_SHADER
	u mat4 uView
	u mat4 uProjection
	u mat4 uLightMatrix
	u vec3 uLightDir
	u ivec3 uVoxelDimension
	u vec3 uVoxelGridRangeMin
	u vec3 uVoxelGridRangeMax
	u float uVoxelWorldSize
	u bool uEnableIndirectTrace
	u bool uShowAlbedo
	u bool uDebugVoxel
	u bool uShowEdge
	u vec3 uCamPosition

	u ivec2 uResolution
end

begin SkyboxShader
	src shaders/skybox.frag GL_FRAGMENT_SHADER
	src shaders/skybox.vert GL_VERTEX_SHADER
	u mat4 uProjection
	u mat4 uView
end

begin VoxelMipmapShader
	src shaders/mipmap.comp GL_COMPUTE_SHADER
	u ivec3 uVoxelDimensionMipmap
	u int uSourceLod
end
